/*
 * main.cpp

 *
 *  Created on: 2018/01/17
 *      Author: yoneken
 */
#include <mainpp.h>
#include <ros.h>
#include <std_msgs/String.h>

//Private variable
TIM_HandleTypeDef htim1;
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim4;

UART_HandleTypeDef huart2;

//Private function
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_TIM4_Init(void);
static void MX_TIM3_Init(void);
static void MX_USART2_UART_Init(void);
static void MX_TIM1_Init(void);

//Private user code
uint8_t RX2_Char[2];
uint8_t Char_Buffer[20];
uint8_t Char_Buffer_length = 0;
uint8_t Char_Buffer_isRecieving = 0;

uint8_t MSG1[50];
uint8_t MSG1_length;

uint8_t MSG2[50];
uint8_t MSG2_length;

uint32_t encoder_value = 0;
float rpm_value = 0.00;

void set_speed(float Vx, float W){
	uint8_t direction1 = 1;
	uint8_t direction2 = 1;
	float _Wl = (Vx - (2.22169002*W))/1.08 ;
	float _Wr = ((2.22169002*W) + Vx)/1.08;
	if(_Wl < 0){
		direction1 = 0;
		_Wl = -_Wl;
	}
	if(_Wr < 0){
		direction2 = 0;
		_Wr = -_Wr;
		}
	HAL_GPIO_WritePin(MOTOR_PWM_GPIO_Port,MOTOR_PWM_Pin,direction1);
	__HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_1, _Wl);
	HAL_GPIO_WritePin(MOTOR_PWM_GPIO_Port,MOTOR2_PWM_Pin,direction2);
	__HAL_TIM_SET_COMPARE(&htim4, TIM_CHANNEL_2, _Wr);
}

ros::NodeHandle nh;

std_msgs::String str_msg;
ros::Publisher chatter("chatter", &str_msg);
char hello[] = "Hello world!";

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart){
  nh.getHardware()->flush();
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
  nh.getHardware()->reset_rbuf();
}

void setup(void)
{
  nh.initNode();
  nh.advertise(chatter);
}

void loop(void)
{
  HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_3);

  str_msg.data = hello;
  chatter.publish(&str_msg);
  nh.spinOnce();

  HAL_Delay(1000);
}

